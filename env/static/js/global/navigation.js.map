{"mappings":"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","sources":["<anon>","env/assets/js/global/navigation.js"],"sourcesContent":["(() => {\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequireedc5\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequireedc5\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"kU33X\", function(module, exports) {\n\n$parcel$export(module.exports, \"initializeNavigation\", () => $f37b69d55bf3b9d6$export$7ff59cb12ddde70d);\n/**\n * @file navigation.js\n * @description Initializes and manages the navigation menu, submenu interactions, and section highlighting\n */ /**\n * Initializes the navigation functionality\n */ function $f37b69d55bf3b9d6$export$7ff59cb12ddde70d() {\n    const requiredElements = {\n        navWrapper: document.getElementById(\"nav-wrapper\"),\n        menuItems: document.querySelectorAll(\"#top-menu > li\"),\n        submenu: document.getElementById(\"submenu\"),\n        submenuContent: document.getElementById(\"submenu-content\"),\n        submenuGrid: document.getElementById(\"submenu-grid\"),\n        dashedBorder: document.getElementById(\"dashed-border\"),\n        mobileMenuButton: document.querySelector(\"[aria-controls='top-menu'], .navbar-burger\"),\n        topMenu: document.getElementById(\"top-menu\")\n    };\n    // Check for missing elements and log detailed information\n    const missingElements = Object.entries(requiredElements).filter(([key, element])=>!element || element instanceof NodeList && element.length === 0).map(([key])=>key);\n    if (missingElements.length > 0) {\n        console.error(\"Error initializing navigation: The following required elements were not found:\", missingElements);\n        return; // Exit the function if required elements are missing\n    }\n    let timeoutId;\n    function showSubmenu(menuItem) {\n        clearTimeout(timeoutId);\n        const submenuLinks = menuItem.querySelector(\"[role='menu']\")?.innerHTML || \"\";\n        const sectionTitle = menuItem.querySelector(\"a\")?.textContent || \"\";\n        requiredElements.submenuGrid.innerHTML = `\n      <div class=\"col-start-4 col-span-1\">\n        <h3 class=\"text-sm text-neutral-600 mb-2\">Explore ${sectionTitle}</h3>\n        <ul class=\"space-y-2 text-right\">\n          ${submenuLinks}\n        </ul>\n      </div>\n    `;\n        requiredElements.submenu.classList.remove(\"h-0\");\n        requiredElements.submenu.classList.add(\"h-auto\");\n        requiredElements.submenuContent.classList.remove(\"opacity-0\");\n        requiredElements.submenuContent.classList.add(\"opacity-100\");\n        const submenuHeight = requiredElements.submenu.offsetHeight;\n        requiredElements.dashedBorder.style.transform = `translateY(${submenuHeight}px)`;\n        menuItem.querySelector(\"a\")?.setAttribute(\"aria-expanded\", \"true\");\n        requiredElements.submenu.setAttribute(\"aria-hidden\", \"false\");\n    }\n    function hideSubmenu() {\n        requiredElements.submenuContent.classList.remove(\"opacity-100\");\n        requiredElements.submenuContent.classList.add(\"opacity-0\");\n        timeoutId = setTimeout(()=>{\n            requiredElements.submenu.classList.remove(\"h-auto\");\n            requiredElements.submenu.classList.add(\"h-0\");\n            requiredElements.dashedBorder.style.transform = \"translateY(0)\";\n            requiredElements.menuItems.forEach((item)=>{\n                item.querySelector(\"a\")?.setAttribute(\"aria-expanded\", \"false\");\n            });\n            requiredElements.submenu.setAttribute(\"aria-hidden\", \"true\");\n        }, 200);\n    }\n    function handleMenuItemInteraction(event) {\n        const menuItem = event.currentTarget;\n        if (event.type === \"mouseenter\" || event.type === \"focus\" && !menuItem.classList.contains(\"active\")) showSubmenu(menuItem);\n    }\n    function toggleMobileMenu() {\n        const isExpanded = requiredElements.mobileMenuButton.getAttribute(\"aria-expanded\") === \"true\";\n        requiredElements.mobileMenuButton.setAttribute(\"aria-expanded\", (!isExpanded).toString());\n        requiredElements.topMenu.classList.toggle(\"hidden\", isExpanded);\n        requiredElements.topMenu.classList.toggle(\"lg:flex\", isExpanded);\n    }\n    // Intersection Observer setup\n    const observerOptions = {\n        root: null,\n        rootMargin: \"0px\",\n        threshold: 0.5\n    };\n    const observerCallback = (entries)=>{\n        entries.forEach((entry)=>{\n            const id = entry.target.getAttribute(\"id\");\n            const menuItem = document.querySelector(`#top-menu a[href=\"#${id}\"]`)?.parentElement;\n            if (entry.isIntersecting) menuItem?.classList.add(\"active\");\n            else menuItem?.classList.remove(\"active\");\n        });\n    };\n    const observer = new IntersectionObserver(observerCallback, observerOptions);\n    // Observe all sections\n    document.querySelectorAll(\"section[id]\").forEach((section)=>{\n        observer.observe(section);\n    });\n    // Event listeners\n    requiredElements.menuItems.forEach((item)=>{\n        item.addEventListener(\"mouseenter\", handleMenuItemInteraction);\n        item.addEventListener(\"focus\", handleMenuItemInteraction, true);\n    });\n    requiredElements.submenu.addEventListener(\"mouseenter\", ()=>clearTimeout(timeoutId));\n    requiredElements.navWrapper.addEventListener(\"mouseleave\", hideSubmenu);\n    requiredElements.submenu.addEventListener(\"mouseleave\", hideSubmenu);\n    requiredElements.mobileMenuButton.addEventListener(\"click\", toggleMobileMenu);\n    document.addEventListener(\"keydown\", (e)=>{\n        if (e.key === \"Escape\") {\n            hideSubmenu();\n            document.activeElement?.blur();\n        }\n    });\n    window.addEventListener(\"resize\", ()=>{\n        if (window.innerWidth >= 1024) requiredElements.topMenu?.classList.remove(\"hidden\");\n        else {\n            hideSubmenu();\n            requiredElements.topMenu?.classList.add(\"hidden\");\n        }\n    });\n    // Touch events for mobile\n    let touchStartY;\n    requiredElements.submenu.addEventListener(\"touchstart\", (e)=>{\n        touchStartY = e.touches[0].clientY;\n    }, {\n        passive: true\n    });\n    requiredElements.submenu.addEventListener(\"touchmove\", (e)=>{\n        const touchEndY = e.touches[0].clientY;\n        const diff = touchStartY - touchEndY;\n        if (diff > 50) hideSubmenu();\n    }, {\n        passive: true\n    });\n    console.log(\"Navigation initialized successfully with Intersection Observer\");\n}\n\n});\n\n\nparcelRequire(\"kU33X\");\n})();\n//# sourceMappingURL=navigation.js.map\n","/**\n * @file navigation.js\n * @description Initializes and manages the navigation menu, submenu interactions, and section highlighting\n */\n\n/**\n * Initializes the navigation functionality\n */\nexport function initializeNavigation() {\n  const requiredElements = {\n    navWrapper: document.getElementById(\"nav-wrapper\"),\n    menuItems: document.querySelectorAll(\"#top-menu > li\"),\n    submenu: document.getElementById(\"submenu\"),\n    submenuContent: document.getElementById(\"submenu-content\"),\n    submenuGrid: document.getElementById(\"submenu-grid\"),\n    dashedBorder: document.getElementById(\"dashed-border\"),\n    mobileMenuButton: document.querySelector(\n      \"[aria-controls='top-menu'], .navbar-burger\"\n    ),\n    topMenu: document.getElementById(\"top-menu\"),\n  };\n\n  // Check for missing elements and log detailed information\n  const missingElements = Object.entries(requiredElements)\n    .filter(\n      ([key, element]) =>\n        !element || (element instanceof NodeList && element.length === 0)\n    )\n    .map(([key]) => key);\n\n  if (missingElements.length > 0) {\n    console.error(\n      \"Error initializing navigation: The following required elements were not found:\",\n      missingElements\n    );\n    return; // Exit the function if required elements are missing\n  }\n\n  let timeoutId;\n\n  function showSubmenu(menuItem) {\n    clearTimeout(timeoutId);\n    const submenuLinks =\n      menuItem.querySelector(\"[role='menu']\")?.innerHTML || \"\";\n    const sectionTitle = menuItem.querySelector(\"a\")?.textContent || \"\";\n\n    requiredElements.submenuGrid.innerHTML = `\n      <div class=\"col-start-4 col-span-1\">\n        <h3 class=\"text-sm text-neutral-600 mb-2\">Explore ${sectionTitle}</h3>\n        <ul class=\"space-y-2 text-right\">\n          ${submenuLinks}\n        </ul>\n      </div>\n    `;\n\n    requiredElements.submenu.classList.remove(\"h-0\");\n    requiredElements.submenu.classList.add(\"h-auto\");\n    requiredElements.submenuContent.classList.remove(\"opacity-0\");\n    requiredElements.submenuContent.classList.add(\"opacity-100\");\n\n    const submenuHeight = requiredElements.submenu.offsetHeight;\n    requiredElements.dashedBorder.style.transform = `translateY(${submenuHeight}px)`;\n\n    menuItem.querySelector(\"a\")?.setAttribute(\"aria-expanded\", \"true\");\n    requiredElements.submenu.setAttribute(\"aria-hidden\", \"false\");\n  }\n\n  function hideSubmenu() {\n    requiredElements.submenuContent.classList.remove(\"opacity-100\");\n    requiredElements.submenuContent.classList.add(\"opacity-0\");\n    timeoutId = setTimeout(() => {\n      requiredElements.submenu.classList.remove(\"h-auto\");\n      requiredElements.submenu.classList.add(\"h-0\");\n      requiredElements.dashedBorder.style.transform = \"translateY(0)\";\n\n      requiredElements.menuItems.forEach((item) => {\n        item.querySelector(\"a\")?.setAttribute(\"aria-expanded\", \"false\");\n      });\n      requiredElements.submenu.setAttribute(\"aria-hidden\", \"true\");\n    }, 200);\n  }\n\n  function handleMenuItemInteraction(event) {\n    const menuItem = event.currentTarget;\n    if (\n      event.type === \"mouseenter\" ||\n      (event.type === \"focus\" && !menuItem.classList.contains(\"active\"))\n    ) {\n      showSubmenu(menuItem);\n    }\n  }\n\n  function toggleMobileMenu() {\n    const isExpanded =\n      requiredElements.mobileMenuButton.getAttribute(\"aria-expanded\") ===\n      \"true\";\n\n    requiredElements.mobileMenuButton.setAttribute(\n      \"aria-expanded\",\n      (!isExpanded).toString()\n    );\n    requiredElements.topMenu.classList.toggle(\"hidden\", isExpanded);\n    requiredElements.topMenu.classList.toggle(\"lg:flex\", isExpanded);\n  }\n\n  // Intersection Observer setup\n  const observerOptions = {\n    root: null,\n    rootMargin: \"0px\",\n    threshold: 0.5,\n  };\n\n  const observerCallback = (entries) => {\n    entries.forEach((entry) => {\n      const id = entry.target.getAttribute(\"id\");\n      const menuItem = document.querySelector(\n        `#top-menu a[href=\"#${id}\"]`\n      )?.parentElement;\n\n      if (entry.isIntersecting) {\n        menuItem?.classList.add(\"active\");\n      } else {\n        menuItem?.classList.remove(\"active\");\n      }\n    });\n  };\n\n  const observer = new IntersectionObserver(observerCallback, observerOptions);\n\n  // Observe all sections\n  document.querySelectorAll(\"section[id]\").forEach((section) => {\n    observer.observe(section);\n  });\n\n  // Event listeners\n  requiredElements.menuItems.forEach((item) => {\n    item.addEventListener(\"mouseenter\", handleMenuItemInteraction);\n    item.addEventListener(\"focus\", handleMenuItemInteraction, true);\n  });\n\n  requiredElements.submenu.addEventListener(\"mouseenter\", () =>\n    clearTimeout(timeoutId)\n  );\n\n  requiredElements.navWrapper.addEventListener(\"mouseleave\", hideSubmenu);\n  requiredElements.submenu.addEventListener(\"mouseleave\", hideSubmenu);\n\n  requiredElements.mobileMenuButton.addEventListener(\"click\", toggleMobileMenu);\n\n  document.addEventListener(\"keydown\", (e) => {\n    if (e.key === \"Escape\") {\n      hideSubmenu();\n      document.activeElement?.blur();\n    }\n  });\n\n  window.addEventListener(\"resize\", () => {\n    if (window.innerWidth >= 1024) {\n      requiredElements.topMenu?.classList.remove(\"hidden\");\n    } else {\n      hideSubmenu();\n      requiredElements.topMenu?.classList.add(\"hidden\");\n    }\n  });\n\n  // Touch events for mobile\n  let touchStartY;\n  requiredElements.submenu.addEventListener(\n    \"touchstart\",\n    (e) => {\n      touchStartY = e.touches[0].clientY;\n    },\n    { passive: true }\n  );\n\n  requiredElements.submenu.addEventListener(\n    \"touchmove\",\n    (e) => {\n      const touchEndY = e.touches[0].clientY;\n      const diff = touchStartY - touchEndY;\n      if (diff > 50) {\n        hideSubmenu();\n      }\n    },\n    { passive: true }\n  );\n\n  console.log(\"Navigation initialized successfully with Intersection Observer\");\n}\n"],"names":["$parcel$global","$parcel$modules","$parcel$inits","parcelRequire","globalThis","id","exports","init","module","call","err","Error","code","register","parcelRegister","$f37b69d55bf3b9d6$export$7ff59cb12ddde70d","timeoutId","touchStartY","requiredElements","navWrapper","document","getElementById","menuItems","querySelectorAll","submenu","submenuContent","submenuGrid","dashedBorder","mobileMenuButton","querySelector","topMenu","missingElements","Object","entries","filter","key","element","NodeList","length","map","console","error","hideSubmenu","classList","remove","add","setTimeout","style","transform","forEach","item","setAttribute","handleMenuItemInteraction","event","menuItem","currentTarget","type","contains","showSubmenu","clearTimeout","submenuLinks","innerHTML","sectionTitle","textContent","submenuHeight","offsetHeight","observer","IntersectionObserver","entry","target","getAttribute","parentElement","isIntersecting","root","rootMargin","threshold","section","observe","addEventListener","isExpanded","toString","toggle","e","activeElement","blur","window","innerWidth","touches","clientY","passive","touchEndY","log","defineProperty","get","set","s","enumerable","configurable"],"version":3,"file":"navigation.js.map"}