{"mappings":"A,C,KCMA,SAAS,IACP,IAAM,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAgB,SAAS,aAAa,CAAC,mBAGvC,EAAgB,KAAK,KAAK,CAAC,AADV,OAAO,WAAW,CADtB,IAKb,EAAe,SAAS,sBAAsB,GAC9C,EAAgB,SAAS,sBAAsB,GAGrD,EAAY,EAAc,EAAe,EAAa,QAAQ,CAAC,MAAM,EACrE,EAAY,EAAe,EAAe,EAAc,QAAQ,CAAC,MAAM,EAEvE,EAAa,WAAW,CAAC,GACzB,EAAc,WAAW,CAAC,EAC5B,CAEA,SAAS,EAAY,CAAQ,CAAE,CAAa,CAAE,CAAa,EACzD,IAAK,IAAI,EAAI,EAAe,EAAI,EAAe,IAAK,CAClD,IAAM,EAAO,SAAS,aAAa,CAAC,OACpC,EAAK,SAAS,CAAC,GAAG,CAAC,WAAY,eAAgB,gBAAiB,OAChE,EAAS,WAAW,CAAC,EACvB,CACF,CA/BA,SAAS,gBAAgB,CAAC,mBAAoB,SAmCxC,EAlCJ,IAEA,OAAO,gBAAgB,CAAC,UAgCpB,EAAU,CAAA,EACP,WAEA,IAEH,AArCuC,EAqC9B,KAAK,CAAC,IAAI,CAAE,WACrB,EAAU,CAAA,EACV,WAAW,WAET,EAAU,CAAA,CACZ,EA1C4D,KA4ChE,GA3CF,E,C","sources":["<anon>","env/assets/js/components/notebookCalc.js"],"sourcesContent":["(() => {\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    $ca08a6fd5bb2dea0$var$adjustNotebookLines();\n    // Throttle the resize event\n    window.addEventListener(\"resize\", $ca08a6fd5bb2dea0$var$throttle($ca08a6fd5bb2dea0$var$adjustNotebookLines, 250));\n});\nfunction $ca08a6fd5bb2dea0$var$adjustNotebookLines() {\n    const notebookLeft = document.querySelector(\".notebook-left\");\n    const notebookRight = document.querySelector(\".notebook-right\");\n    const lineHeight = 24;\n    const viewportHeight = window.innerHeight;\n    const numberOfLines = Math.floor(viewportHeight / lineHeight);\n    // Use DocumentFragment to minimize reflows\n    const fragmentLeft = document.createDocumentFragment();\n    const fragmentRight = document.createDocumentFragment();\n    // Create lines only if they don't exist\n    $ca08a6fd5bb2dea0$var$createLines(fragmentLeft, numberOfLines, notebookLeft.children.length);\n    $ca08a6fd5bb2dea0$var$createLines(fragmentRight, numberOfLines, notebookRight.children.length);\n    notebookLeft.appendChild(fragmentLeft);\n    notebookRight.appendChild(fragmentRight);\n}\nfunction $ca08a6fd5bb2dea0$var$createLines(fragment, numberOfLines, existingLines) {\n    for(let i = existingLines; i < numberOfLines; i++){\n        const line = document.createElement(\"div\");\n        line.classList.add(\"border-b\", \"border-black\", \"border-dotted\", \"h-6\");\n        fragment.appendChild(line);\n    }\n}\n// Throttle function to limit the number of calls to adjustNotebookLines\nfunction $ca08a6fd5bb2dea0$var$throttle(callback, limit) {\n    let waiting = false; // Initially, we're not waiting\n    return function() {\n        // We return a throttled function\n        if (!waiting) {\n            // If we're not waiting\n            callback.apply(this, arguments); // Execute users function\n            waiting = true; // Prevent future invocations\n            setTimeout(function() {\n                // After a period of time\n                waiting = false; // And allow future invocations\n            }, limit);\n        }\n    };\n}\n\n})();\n//# sourceMappingURL=notebookCalc.js.map\n","document.addEventListener(\"DOMContentLoaded\", () => {\n  adjustNotebookLines();\n  // Throttle the resize event\n  window.addEventListener(\"resize\", throttle(adjustNotebookLines, 250));\n});\n\nfunction adjustNotebookLines() {\n  const notebookLeft = document.querySelector(\".notebook-left\");\n  const notebookRight = document.querySelector(\".notebook-right\");\n  const lineHeight = 24;\n  const viewportHeight = window.innerHeight;\n  const numberOfLines = Math.floor(viewportHeight / lineHeight);\n\n  // Use DocumentFragment to minimize reflows\n  const fragmentLeft = document.createDocumentFragment();\n  const fragmentRight = document.createDocumentFragment();\n\n  // Create lines only if they don't exist\n  createLines(fragmentLeft, numberOfLines, notebookLeft.children.length);\n  createLines(fragmentRight, numberOfLines, notebookRight.children.length);\n\n  notebookLeft.appendChild(fragmentLeft);\n  notebookRight.appendChild(fragmentRight);\n}\n\nfunction createLines(fragment, numberOfLines, existingLines) {\n  for (let i = existingLines; i < numberOfLines; i++) {\n    const line = document.createElement(\"div\");\n    line.classList.add(\"border-b\", \"border-black\", \"border-dotted\", \"h-6\");\n    fragment.appendChild(line);\n  }\n}\n\n// Throttle function to limit the number of calls to adjustNotebookLines\nfunction throttle(callback, limit) {\n  let waiting = false; // Initially, we're not waiting\n  return function () {\n    // We return a throttled function\n    if (!waiting) {\n      // If we're not waiting\n      callback.apply(this, arguments); // Execute users function\n      waiting = true; // Prevent future invocations\n      setTimeout(function () {\n        // After a period of time\n        waiting = false; // And allow future invocations\n      }, limit);\n    }\n  };\n}\n"],"names":["$ca08a6fd5bb2dea0$var$adjustNotebookLines","notebookLeft","document","querySelector","notebookRight","numberOfLines","Math","floor","viewportHeight","window","innerHeight","fragmentLeft","createDocumentFragment","fragmentRight","$ca08a6fd5bb2dea0$var$createLines","children","length","appendChild","fragment","existingLines","i","line","createElement","classList","add","addEventListener","waiting","callback","apply","arguments","setTimeout"],"version":3,"file":"notebookCalc.js.map"}